trigger:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - tutorials/**
pr:
  branches:
    include:
    - main
    - rel-*
  paths:
    exclude:
    - docs/**
    - README.md
    - tutorials/**

stages:
- stage: AndroidBuilds
  dependsOn: []
  jobs:

  #############
  # Android
  #############
  - job: AndroidCpp
    pool:
      vmImage: 'macOS-13'
    timeoutInMinutes: 30
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
          addToPath: true
          architecture: "x64"
        displayName: "Use Python 3.9"

      - task: JavaToolInstaller@0
        displayName: Use jdk 17
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - script: brew install ninja
        displayName: Install ninja

      - bash: |
          python ./tools/build.py \
            --config RelWithDebInfo \
            --android \
            --android_abi x86_64 \
            --enable_cxx_tests \
            --update --build --parallel
        displayName: Build onnxruntime-extensions for Android

      - template: templates/run-with-android-emulator-steps.yml
        parameters:
          steps:
          - bash: |
              python ./tools/build.py \
                --config RelWithDebInfo \
                --android \
                --android_abi x86_64 \
                --enable_cxx_tests \
                --test
            displayName: Run C++ tests on emulator

- stage: WindowsBuilds
  dependsOn: []
  jobs:

  - job: OrtNightly
    pool:
      name: 'onnxruntime-extensions-Windows-CPU'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        disableDownloadFromRegistry: true
        addToPath: false
        architecture: 'x64'
      displayName: Use ADO python task

    - script: |
        python -m pip install --upgrade setuptools pip
        python -m pip install numpy
        python -m pip install -U --index-url https://pkgs.dev.azure.com/aiinfra/PublicPackages/_packaging/ORT-Nightly/pypi/simple/ ort-nightly
        python -m pip install -v -e .
      displayName: Build onnxruntime-extensions in editable mode.

    - script: |
        python -m pip install -r requirements-dev.txt
        python -m pip install torch torchvision torchaudio
      displayName: Install dependencies for pytest

    - script: |
        cd test
        python -m pytest . --verbose
      displayName: Run python test
