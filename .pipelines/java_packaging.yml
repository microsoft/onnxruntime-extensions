parameters:
- name: JavaPackagingandPublishing
  displayName: Package and Publish Java Package
  type: boolean
  default: true
stages:
- stage: Java_Packaging
  jobs:
  - job: Windows CPU Java Packaging
    workspace:
      clean: all
    pool: 'onnxruntime-extensions-Windows-CPU'

    steps:
    - script: |
        ./build.sh -DOCOS_BUILD_JAVA=ON
      displayName: build the extensions java package

    - task: CopyFiles@2
      displayName: 'Copy Java Files for $(Agent.OS) Arch to Artifact Staging Directory'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)/out/$(Agent.OS)/RelWithDebInfo/java/build/libs'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - job: Linux CPU Java Packaging
    workspace:
      clean: all
    pool: 'onnxruntime-extensions-Linux-CPU'

    steps:
    - script: |
        sh ./build.sh -DOCOS_BUILD_JAVA=ON
      displayName: build the extensions java package

    - task: CopyFiles@2
      displayName: 'Copy Java Files for $(Agent.OS) Arch to Artifact Staging Directory'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)/out/$(Agent.OS)/RelWithDebInfo/java/build/libs'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - job: MacOS CPU Java Packaging
    workspace:
      clean: all
    pool:
      vmImage: 'macOS-13'

    steps:
    - script: |
        sh ./build.sh -DOCOS_BUILD_JAVA=ON
      displayName: build the extensions java package

    - task: CopyFiles@2
      displayName: 'Copy Java Files for $(Agent.OS) Arch to Artifact Staging Directory'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)/out/$(Agent.OS)/RelWithDebInfo/java/build/libs'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

- stage: Publish_Java_Package
  dependsOn: Java_Packaging
  jobs:
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Pipeline Artifact'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifact: 'onnxruntime-extensions-java-cpu'

  - template: templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
