# packaging pipeline for onnxruntime-extensions ios cocoapods package
parameters:
- name: Platform
  displayName: ios Platform
  type: string
- name: ios_arch
  displayName: ios_arch
  type: string
- name: IsReleaseBuild
  displayName: "Is this is a release build?"
  type: boolean
- name: AdditionalBuildFlags
  displayName: set OCOS_ENABLE_CV2=OFF OCOS_ENABLE_BLINGFIRE
  type: string
  
jobs:
  - job: IOS_C_API_Packaging_${{ parameters.Platform }}_${{ parameters.ios_arch }}
    condition: succeeded()
    pool:
      vmImage: "macOS-12"
    timeoutInMinutes: 120
    variables:
      buildConfig: Release
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
          addToPath: true
          architecture: "x64"

      # iOS xcframework build doesn't work with CMake 3.25.1, pin to 3.25.0
      - script: |
          python -m pip install cmake==3.25.0
        displayName: "Install CMake 3.25.0"

      - template: set-package-version-variable-step.yml
        parameters:
          IsReleaseBuild: ${{ parameters.IsReleaseBuild }}
          PackageVersionVariableName: ORT_EXTENSIONS_POD_VERSION

      - script: |
          python ./tools/ios/build_xcframework.py \
            --output-dir $(Build.BinariesDirectory)/xcframework_out \
            --config $(buildConfig) \
            --platform-arch  ${{ parameters.Platform }} ${{ parameters.ios_arch }} \
            --mode build_platform_arch_frameworks_only \
            --cmake-extra-defines ${{parameters.AdditionalBuildFlags}}
        displayName: "Build xcframework"

      - bash: |
          set -e -x

          tar -cvzf $(Build.ArtifactStagingDirectory)/onnxruntime-extensions-ios-${{ parameters.Platform }}-${{ parameters.ios_arch }}-lib.tgz -C $(Build.BinariesDirectory)/ xcframework_out

        displayName: "Assemble artifacts"

      - publish: "$(Build.ArtifactStagingDirectory)"
        artifact: onnxruntime-extensions-ios-${{ parameters.Platform }}-${{ parameters.ios_arch }}-lib
        displayName: "Publish artifacts"
