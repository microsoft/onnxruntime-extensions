parameters:
- name: DoCompliance
  displayName: Run Compliance Tasks?
  type: boolean
  default: true

- name: DoEsrp
  displayName: Run code sign tasks? Must be true if you are doing an OnnxRuntime extensions release.
  type: boolean
  default: false

- name: BuildPlatform
  type: string
  values:
  - 'x86'
  - 'x64'
  - 'arm64'
  - 'arm'

- name: StageNameSuffix
  displayName: job name for nuget
  type: string
  default: ''

- name: BuildPool
  type: string
  default: 'Win-CPU-2021'

- name: AdditionalBuildFlags
  displayName: Additional build flags for build_lib.bat
  type: string


jobs:
- job: Windows_Packaging_${{ parameters.StageNameSuffix }}
  workspace:
    clean: all
  pool: ${{ parameters.BuildPool }}
  timeoutInMinutes: 300

  steps:
    - checkout: self
      clean: true
      submodules: none

    - task: BatchScript@1
      displayName: 'build onnxruntime-extensions'
      inputs:
        filename: '.\build_lib.bat'
        arguments: '--${{parameters.BuildPlatform}} --cmake_generator "Visual Studio 16 2019" --build_dir $(Build.BinariesDirectory)/out/ --config RelWithDebInfo ${{parameters.AdditionalBuildFlags}}'
        modifyEnvironment: true
        workingFolder: $(Build.SourcesDirectory)

    - script: |
        dir
      workingDirectory: '$(Build.BinariesDirectory)/out/Windows/'
      displayName: 'List built DLLs'

    - script: |
        cd out/Windows
        ctest -C RelWithDebInfo --output-on-failure
      displayName: Run C++ native tests
      workingDirectory: '$(Build.BinariesDirectory)'

    - task: PowerShell@2
      displayName: 'Copy and Create artifacts'
      inputs:
        targetType: 'inline'
        script: |
          $_OrtExtVersion=(cat version.txt)
          echo "##vso[task.setvariable variable=OrtExtVersion;]$_OrtExtVersion"

          cd ./out
          $target_lib_path="$(Build.BinariesDirectory)/onnxruntime-extensions-win-${{parameters.BuildPlatform}}-$_OrtExtVersion/lib"
          New-Item $target_lib_path -ItemType Directory
          cp bin\RelWithDebInfo\ortextensions.* $target_lib_path
          cp lib/RelWithDebInfo/ortextensions.* $target_lib_path

        workingDirectory: '$(Build.SourcesDirectory)'

    - template: win-esrp-dll.yml
      parameters:
        FolderPath: '$(Build.BinariesDirectory)/onnxruntime-extensions-win-${{parameters.BuildPlatform}}-$(OrtExtVersion)'
        DisplayName: 'Sign DLL'
        DoEsrp: 'true'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/onnxruntime-extensions-win-${{parameters.BuildPlatform}}-$(OrtExtVersion)'
        includeRootFolder: true
        archiveType: 'tar' # Options: zip, 7z, tar, wim
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/onnxruntime-extensions-win-${{parameters.BuildPlatform}}.tgz'
        replaceExistingArchive: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'onnxruntime-extensions-win-${{parameters.BuildPlatform}}'
