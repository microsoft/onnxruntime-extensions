parameters:
- name: IsReleaseBuild
  displayName: |
    If true, the version is a release version. Otherwise, the version has a development suffix.
  type: boolean
  default: false

- name: PackageVersionVariableName
  displayName: |
    The name of the variable that will contain the version value.
  type: string

steps:
- bash: |
    set -e -x

    VERSION_FILE="$(Build.SourcesDirectory)/.version.txt"
    if [[ ! -f "${VERSION_FILE}" ]]; then
      echo "Version file \"${VERSION_FILE}\" doesn't exist. Make sure that a build has run first."
      exit 1
    fi

    BASE_VERSION="$(cat "${VERSION_FILE}")"

    if [[ "${{ parameters.IsReleaseBuild }}" == "true" ]]; then
      VERSION="${BASE_VERSION}"
    else
      SHORT_COMMIT_HASH="$(git rev-parse --short HEAD)"
      VERSION="${BASE_VERSION}-dev+$(Build.BuildId).${SHORT_COMMIT_HASH}"
    fi

    set_var() {
      local VAR_NAME=${1:?}
      local VAR_VALUE=${2:?}
      echo "##vso[task.setvariable variable=${VAR_NAME}]${VAR_VALUE}"
      echo "${VAR_NAME}: ${VAR_VALUE}"
    }

    set_var "${{ parameters.PackageVersionVariableName }}" "${VERSION}"
  displayName: "Set \"${{ parameters.PackageVersionVariableName }}\" variable to package version"
